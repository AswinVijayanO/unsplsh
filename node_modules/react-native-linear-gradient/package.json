{
  "_args": [
    [
      {
        "raw": "react-native-linear-gradient@^2.5.4",
        "scope": null,
        "escapedName": "react-native-linear-gradient",
        "name": "react-native-linear-gradient",
        "rawSpec": "^2.5.4",
        "spec": ">=2.5.4 <3.0.0",
        "type": "range"
      },
      "/home/aswin/react-native/unsplsh"
    ]
  ],
  "_from": "react-native-linear-gradient@^2.5.4",
  "_hasShrinkwrap": false,
  "_id": "react-native-linear-gradient@2.5.6",
  "_location": "/react-native-linear-gradient",
  "_nodeVersion": "11.10.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-native-linear-gradient_2.5.6_1564059800893_0.7462627282374337"
  },
  "_npmUser": {
    "name": "radex",
    "email": "this.is@radex.io"
  },
  "_npmVersion": "6.7.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-linear-gradient@^2.5.4",
    "scope": null,
    "escapedName": "react-native-linear-gradient",
    "name": "react-native-linear-gradient",
    "rawSpec": "^2.5.4",
    "spec": ">=2.5.4 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-linear-gradient/-/react-native-linear-gradient-2.5.6.tgz",
  "_shasum": "96215cbc5ec7a01247a20890888aa75b834d44a0",
  "_shrinkwrap": null,
  "_spec": "react-native-linear-gradient@^2.5.4",
  "_where": "/home/aswin/react-native/unsplsh",
  "author": {
    "name": "Brent Vatne",
    "email": "brentvatne@gmail.com",
    "url": "https://github.com/brentvatne"
  },
  "bugs": {
    "url": "https://github.com/react-native-community/react-native-linear-gradient/issues"
  },
  "contributors": [
    {
      "name": "Nick Hudkins",
      "email": "nick@nickhudkins.com",
      "url": "https://github.com/nickhudkins"
    },
    {
      "name": "Gant Laborde",
      "email": "gant@infinite.red",
      "url": "https://github.com/gantman"
    },
    {
      "name": "Dmitry Gladkov",
      "email": "dmitry.gladkov@gmail.com",
      "url": "https://github.com/dgladkov"
    },
    {
      "name": "Radek Pietruszewski",
      "email": "radexpl@gmail.com",
      "url": "https://github.com/radex"
    }
  ],
  "dependencies": {},
  "description": "A <LinearGradient> element for React Native",
  "devDependencies": {
    "flow-bin": "^0.92",
    "react": "^16.8.3",
    "react-native": "^0.59.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-HDwEaXcQIuXXCV70O+bK1rizFong3wj+5Q/jSyifKFLg0VWF95xh8XQgfzXwtq0NggL9vNjPKXa016KuFu+VFg==",
    "shasum": "96215cbc5ec7a01247a20890888aa75b834d44a0",
    "tarball": "https://registry.npmjs.org/react-native-linear-gradient/-/react-native-linear-gradient-2.5.6.tgz",
    "fileCount": 41,
    "unpackedSize": 278393,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdOaiZCRA9TVsSAnZWagAAVCsP/Az3BTNA9IZctFqenSj9\n7e8kt/E0Kz250GbnCG7nD9NLmvHn4wK3/cv3UJZkVyr2xNibsxPoQcg3TB07\nfyFySqmENKlmAFj1p1167FFjANAd7P6JoiGJK5gN0i4Wf5rjnklDyYHNSbgZ\n+zgqb3yqOUNm+QJIISplNF2s9JhcQQXHr0E8a+47oJH6cnzY6btmkZCYUemI\nsZSeuoo/3FfPO8Sx7KO/ETjYLRO7us9sMwCN3lYccU4VTNwsDrAd5D3SA59l\nji+5BaEnetSTOlld4IOz7QSBAPRTcpCHGQls7b8wc9NM+7tdfNtpVjw45axC\nF5Qz++1a6bfnWa0coADU9RDqyRPS+3u5sl8dlBEV9qpHFkSv9lW0Fce30DC4\nlilT5Vww1nDuSn+uu7PcUC+sTjRB6+Vx/dgnlEB2niGjzyx8WnTVNs6J1lHw\neIRTPHdgpw1eixEUNEQiraglSU1/W7EBh0PQ4NcmOEX99+rvX/4YXUQbjihI\nxNUA4+ECH68E2nLSq0SM4Ar0qHiPHiAb9HWpdTu82AaYJZ6TR4m3yk0e2m/s\n5Jyb/Vm1B4yR2RdXKMad3h1GP9fP20BRZGd5fFEGwm1MJCjYYABuIg6Z1V36\nGGtPKVQ1HMj09vZ5yMMlI2Z9c73b8LaO0fZyUBguqN47dUpONbl4AaqySSlc\ngSHP\r\n=0dfR\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "638b5de6bb0450cf84a293685990d6611b43a2d4",
  "homepage": "https://github.com/react-native-community/react-native-linear-gradient#readme",
  "license": "MIT",
  "main": "index",
  "maintainers": [
    {
      "name": "brentvatne",
      "email": "brentvatne@gmail.com"
    },
    {
      "name": "dgl",
      "email": "dmitry.gladkov@gmail.com"
    },
    {
      "name": "frantic",
      "email": "alex.frantic@gmail.com"
    },
    {
      "name": "gantman",
      "email": "gantman+npm@gmail.com"
    },
    {
      "name": "nickhudkins",
      "email": "nick@nickhudkins.com"
    }
  ],
  "name": "react-native-linear-gradient",
  "optionalDependencies": {},
  "peerDependencies": {
    "react-native": ">=0.55"
  },
  "readme": "\n[![Version](https://img.shields.io/npm/v/react-native-linear-gradient.svg)](https://www.npmjs.com/package/react-native-linear-gradient)\n[![NPM](https://img.shields.io/npm/dm/react-native-linear-gradient.svg)](https://www.npmjs.com/package/react-native-linear-gradient)\n\n# react-native-linear-gradient\n\nA `<LinearGradient>` component for react-native, as seen in\n[react-native-login](https://github.com/brentvatne/react-native-login).\n\n## Add it to your project\n\nFirst, install it with `npm install react-native-linear-gradient --save`\n\nThen you can try to link the project automatically:\n\n`$ react-native link react-native-linear-gradient`\n\nor do it manually as described below:\n\n### iOS\n\n- Run `npm install react-native-linear-gradient --save`\n\nThen either:\n\n##### Cocoapods\nadd the following line to your Podfile:\n\n```sh\npod 'BVLinearGradient', :path => '../node_modules/react-native-linear-gradient'\n```\n\nor:\n\n##### Manually\n\n1. Open your project in XCode, right click on `Libraries` and click `Add\n   Files to \"Your Project Name\"` Look under `node_modules/react-native-linear-gradient` and add `BVLinearGradient.xcodeproj`.  [(Screenshot 1)](https://drive.google.com/open?id=1ynspo3wZjCLav23teGwKtzh7pcXpeREO) [(Screenshot 2)](https://drive.google.com/open?id=1cXW4DZ-hz-DiugZ3E30msd_4JoUWNE4Z).\n2. Add `libBVLinearGradient.a` to `Build Phases -> Link Binary With Libraries`\n   [(Screenshot 1)](https://drive.google.com/open?id=12qT0Z7rfYrhnHYYECzVOAEMTjiPS2vJr) [(Screenshot 2)](https://drive.google.com/open?id=1LZ2CrOHydBjy479r9aEyMkvqqSbIdDLm).\n3. Click on `BVLinearGradient.xcodeproj` in `Libraries` and go the `Build\n   Settings` tab. Double click the text to the right of `Header Search\n   Paths` and verify that it has `$(SRCROOT)/../react-native/React` - if it\n   isn't, then add it. This is so XCode is able to find the headers that\n   the `BVLinearGradient` source files are referring to by pointing to the\n   header files installed within the `react-native` `node_modules`\n   directory. [(Screenshot)](https://drive.google.com/open?id=1-m3KasC8xudkppVe_E2RsuFaxOfyx6FO).\n\nThen:\n\n\n- Whenever you want to use it within React code now you can: `import LinearGradient from 'react-native-linear-gradient';`\n\n\n**If you're having trouble, you can point your `package.json` at github to see if the issue has been fixed.  Simply change the dependency**\n\n`\"react-native-linear-gradient\": \"react-native-community/react-native-linear-gradient\",`\n\n**to get the data right from github instead of npm and then `npm install`**\n\nFor instance the podspec file does not contain the right data (author attributes etc..) in npm while it does in the github repo.\n\n#### Android\n\n- Run `npm install react-native-linear-gradient --save`\n\nThen:\n\n1. in `android/settings.gradle`\n```\n...\ninclude ':react-native-linear-gradient'\nproject(':react-native-linear-gradient').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-linear-gradient/android')\n```\n\n2. in `android/app/build.gradle` add:\n```\ndependencies {\n    ...\n    implementation project(':react-native-linear-gradient')\n}\n```\n\n3. and finally, in `android/app/src/main/java/com/{YOUR_APP_NAME}/MainActivity.java` for react-native < 0.29,\n   or `android/app/src/main/java/com/{YOUR_APP_NAME}/MainApplication.java` for react-native >= 0.29 add:\n```java\n//...\nimport com.BV.LinearGradient.LinearGradientPackage; // <--- This!\n//...\n@Override\nprotected List<ReactPackage> getPackages() {\n  return Arrays.<ReactPackage>asList(\n    new MainReactPackage(),\n    new LinearGradientPackage() // <---- and This!\n  );\n}\n```\n\n### Windows (WPF)\n\n1. in `windows/MyApp.sln` Add -> Existing Project: `node_modules/react-native-linear-gradient/windows/LinearGradientWPF/LinearGradientWPF.csproj`\n\n2. in `windows/MyApp/MyAppWPF/MyAppWPF.csproj` Add -> Reference -> LinearGradientWPF\n\n3. in `windows/MyApp/MyAppWPF/AppReactPage.cs` add: `using LinearGradient;`\n  and\n  ```csharp\n  public override List<IReactPackage> Packages => new List<IReactPackage>\n  {\n    ...\n    new LinearGradientPackage()\n  }\n  ```\n\n\n## Examples\n\n### Simple\n\nThe following code will produce something like this:\n\n![Example code result](https://raw.githubusercontent.com/react-native-community/react-native-linear-gradient/master/images/example.png)\n\n```javascript\nimport LinearGradient from 'react-native-linear-gradient';\n\n// Within your render function\n<LinearGradient colors={['#4c669f', '#3b5998', '#192f6a']} style={styles.linearGradient}>\n  <Text style={styles.buttonText}>\n    Sign in with Facebook\n  </Text>\n</LinearGradient>\n\n// Later on in your styles..\nvar styles = StyleSheet.create({\n  linearGradient: {\n    flex: 1,\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderRadius: 5\n  },\n  buttonText: {\n    fontSize: 18,\n    fontFamily: 'Gill Sans',\n    textAlign: 'center',\n    margin: 10,\n    color: '#ffffff',\n    backgroundColor: 'transparent',\n  },\n});\n```\n\n### Horizontal gradient\n\nUsing the styles from above, set `start` and `end` like this to make the gradient go from left to right, instead of from top to bottom:\n\n```javascript\n<LinearGradient start={{x: 0, y: 0}} end={{x: 1, y: 0}} colors={['#4c669f', '#3b5998', '#192f6a']} style={styles.linearGradient}>\n  <Text style={styles.buttonText}>\n    Sign in with Facebook\n  </Text>\n</LinearGradient>\n```\n\n### Text gradient (iOS)\n\nOn iOS you can use the `MaskedViewIOS` to display text with a gradient. The trick here is to render the text twice; once for the mask, and once to let the gradient have the correct size (hence the `opacity: 0`):\n\n```jsx\n<MaskedViewIOS maskElement={<Text style={styles.text} />}>\n  <LinearGradient colors={['#f00', '#0f0']} start={{ x: 0, y: 0 }} end={{ x: 1, y: 0 }}>\n    <Text style={[styles.text, { opacity: 0 }]} />\n  </LinearGradient>\n</MaskedViewIOS>\n```\n\n### Additional props\nIn addition to regular `View` props, you can also provide additional props to customize your gradient look:\n\n#### colors\nAn array of at least two color values that represent gradient colors. Example: `['red', 'blue']` sets gradient from red to blue.\n\n#### start\nAn optional object of the following type: `{ x: number, y: number }`. Coordinates declare the position that the gradient starts at, as a fraction of the overall size of the gradient, starting from the top left corner. Example: `{ x: 0.1, y: 0.1 }` means that the gradient will start 10% from the top and 10% from the left.\n\n#### end\nSame as start, but for the end of the gradient.\n\n#### locations\nAn optional array of numbers defining the location of each gradient color stop, mapping to the color with the same index in `colors` prop. Example: `[0.1, 0.75, 1]` means that first color will take 0% - 10%, second color will take 10% - 75% and finally third color will occupy 75% - 100%.\n\n```javascript\n<LinearGradient\n  start={{x: 0.0, y: 0.25}} end={{x: 0.5, y: 1.0}}\n  locations={[0,0.5,0.6]}\n  colors={['#4c669f', '#3b5998', '#192f6a']}\n  style={styles.linearGradient}>\n  <Text style={styles.buttonText}>\n    Sign in with Facebook\n  </Text>\n</LinearGradient>\n```\n\n![Example with extra props](https://raw.githubusercontent.com/react-native-community/react-native-linear-gradient/master/images/example-other-props.png)\n \n#### useAngle / angle / angleCenter\nYou may want to achieve an angled gradient effect, similar to those in image editors like Photoshop.  \nOne issue is that you have to calculate the angle based on the view's size, which only happens asynchronously and will cause unwanted flickr.\n\nIn order to do that correctly you can set `{ useAngle: true, angle: 45, angleCenter: { x: 0.5, y: 0.5} }`, to achieve a gradient with a 45 degrees angle, with its center positioned in the view's exact center.\n\n`useAngle` is used to turn on/off angle based calculation (as opposed to `start`/`end`).  \n`angle` is the angle in degrees.  \n`angleCenter` is the center point of the angle (will control the weight and stretch of the gradient like it does in photoshop.\n\n### Updating the values for fun\n\nCheck out [Examples/AnimatedGradient](https://github.com/react-native-community/react-native-linear-gradient/blob/master/Examples/AnimatedGradient/src/index.js) (`git clone` this project, cd into it, npm install, open in XCode and run) to see how this is done:\n\n![Example with extra props](https://raw.githubusercontent.com/react-native-community/react-native-linear-gradient/master/images/example-animated.gif)\n\n*This gif was created using [licecap](http://www.cockos.com/licecap/) - a great piece of free OSS*\n\n### An example app\nYou can see this component in action in [brentvatne/react-native-login](https://github.com/brentvatne/react-native-login/blob/master/App/Screens/LoginScreen.js#L58-L62).\n\n### Other platforms\n- Web: [react-native-web-community/react-native-web-linear-gradient](https://github.com/react-native-web-community/react-native-web-linear-gradient)\n\n### License\n\nLicense is MIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/react-native-community/react-native-linear-gradient.git"
  },
  "scripts": {
    "flow": "yarn flow:android && yarn flow:ios",
    "flow:android": "flow check --flowconfig-name .flowconfig.android",
    "flow:ios": "flow check"
  },
  "version": "2.5.6"
}
