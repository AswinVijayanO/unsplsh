{
  "_args": [
    [
      {
        "raw": "unsplash-js@^5.0.0",
        "scope": null,
        "escapedName": "unsplash-js",
        "name": "unsplash-js",
        "rawSpec": "^5.0.0",
        "spec": ">=5.0.0 <6.0.0",
        "type": "range"
      },
      "/home/aswin/react-native/unsplsh"
    ]
  ],
  "_from": "unsplash-js@^5.0.0",
  "_hasShrinkwrap": false,
  "_id": "unsplash-js@5.0.0",
  "_location": "/unsplash-js",
  "_nodeVersion": "8.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/unsplash-js_5.0.0_1550595950732_0.3231970205151944"
  },
  "_npmUser": {
    "name": "unsplash",
    "email": "dev@unsplash.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "unsplash-js@^5.0.0",
    "scope": null,
    "escapedName": "unsplash-js",
    "name": "unsplash-js",
    "rawSpec": "^5.0.0",
    "spec": ">=5.0.0 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/unsplash-js/-/unsplash-js-5.0.0.tgz",
  "_shasum": "85bb29bff3d49220be3b335679433a0299365290",
  "_shrinkwrap": null,
  "_spec": "unsplash-js@^5.0.0",
  "_where": "/home/aswin/react-native/unsplsh",
  "author": {
    "name": "Unsplash"
  },
  "bugs": {
    "url": "https://github.com/unsplash/unsplash-js/issues"
  },
  "dependencies": {
    "form-urlencoded": "1.2.0",
    "lodash.get": "4.4.2",
    "querystring": "0.2.0",
    "url-parse": "1.4.4"
  },
  "description": "A Universal JavaScript wrapper for the Unsplash API",
  "devDependencies": {
    "babel": "6.3.26",
    "babel-cli": "6.4.0",
    "babel-core": "6.4.0",
    "babel-eslint": "5.0.0-beta10",
    "babel-loader": "6.2.1",
    "babel-plugin-transform-class-properties": "6.4.0",
    "babel-plugin-transform-flow-strip-types": "6.4.0",
    "babel-plugin-transform-object-assign": "6.3.13",
    "babel-preset-es2015": "6.3.13",
    "coveralls": "2.11.4",
    "eslint": "1.10.2",
    "expect": "1.12.2",
    "flow-bin": "0.40.0",
    "isparta": "4.0.0",
    "istanbul": "0.4.2",
    "karma": "0.13.21",
    "karma-browserstack-launcher": "0.1.10",
    "karma-chrome-launcher": "0.2.2",
    "karma-firefox-launcher": "0.1.7",
    "karma-mocha": "0.2.2",
    "karma-safari-launcher": "0.1.1",
    "karma-sourcemap-loader": "0.3.7",
    "karma-webpack": "1.7.0",
    "mocha": "2.3.3",
    "mockery": "1.4.0",
    "node-fetch": "1.5.0",
    "webpack": "1.12.14"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-yPh4h0m4y0BbSjjNbn36O+8rDESIgxvElwZMwOrvsZpmbtFspwARMnrHyZ3JbAUw62ZmRxHajlsPqw55qo1iug==",
    "shasum": "85bb29bff3d49220be3b335679433a0299365290",
    "tarball": "https://registry.npmjs.org/unsplash-js/-/unsplash-js-5.0.0.tgz",
    "fileCount": 54,
    "unpackedSize": 341606,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcbDdvCRA9TVsSAnZWagAAXdgP/1kxi1bTVuuWNhn7+kIs\nf9gJY4dIcJCMBS+RXnRXS6hs8qfYkoUr7dctnuv++qfDgmLzIjG9XvOH1id+\nTmwuM4RDLnhyut/WeqqYJYVbXgBysKxLtT5MAGnuziQKbPS5Vo1S2dbrlKJc\nASNNEh79SUbz31np69WShQMk1IUiKYJTwheiZC+/pXsoC6e4kQEGLJlbWi9q\npLWeZX/4GQfogZKtiZUjV/aZlWll9ntocWMYyO/ngfzbX36+jt3iYpsHJYp3\nCAKE51podY9FNLgPXfMvTivgJmuY7vFN43nBof/FUNnOTCzhl5PPM5oHjaTh\nbsVDkoT+F5wsGAwy6BoH7B+PdQHVKcMzUpLGdDw7bdSFctuM4OMVU8cXfNHa\nVuh4E7C4PCgfN6AprADmyLvI0xK9mvX7Dqy014I9BxG0fRdkNhfmMH+VZA04\nKG0ToW5IfgaxqNkP5qEEGTZwVsc9Vv2RfOMZscT+2Ya3xmHo8ff+CtXRtMt4\nUjTcyoxLOHoc4jgH/mnldW4+tIL6tzp5Z9abCg7O0WDkPrYbkPefQvw5ENd9\nXs9DOhWr4xzy0RPtaNTjFscNfcT8iIelmYmX/B+ZIiqY9lNuuzHMmGDdg57p\nc3TZbsYxMou3xOrmHmOoRbNqNjqS1mOKvZj5La8BaXaFbePSU3UwLaa0JWR7\nAJ/u\r\n=fYy5\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "fa6d60fd710cfe615749f034a256adcd6b87702d",
  "homepage": "https://github.com/unsplash/unsplash-js#readme",
  "keywords": [
    "unsplash",
    "photos",
    "api",
    "images",
    "splash",
    "free"
  ],
  "license": "MIT",
  "main": "lib/unsplash.js",
  "maintainers": [
    {
      "name": "naoufal",
      "email": "hi@naoufal.com"
    },
    {
      "name": "unsplash",
      "email": "dev@unsplash.com"
    }
  ],
  "name": "unsplash-js",
  "optionalDependencies": {},
  "readme": "# Unsplash\n\n[![npm](https://img.shields.io/npm/v/unsplash-js.svg?style=flat-square)](https://www.npmjs.com/package/unsplash-js)\n[![Travis](https://img.shields.io/travis/unsplash/unsplash-js/master.svg?style=flat-square)](https://travis-ci.org/unsplash/unsplash-js/branches)\n[![BrowserStack Status](https://www.browserstack.com/automate/badge.svg?badge_key=RzJud09PSXV6TCtRWTY3V0czQUxrUVN5eWZJVDYvTmpGRUFCNEpuQ2Mzcz0tLVZaenhaUlM4RTRtdEZxaEhOblZLNWc9PQ==--a90a25acdadf06f74cf787ed47eb08cedd6f3935%)](https://www.browserstack.com/automate/public-build/RzJud09PSXV6TCtRWTY3V0czQUxrUVN5eWZJVDYvTmpGRUFCNEpuQ2Mzcz0tLVZaenhaUlM4RTRtdEZxaEhOblZLNWc9PQ==--a90a25acdadf06f74cf787ed47eb08cedd6f3935%)\n[![Coveralls](https://img.shields.io/coveralls/unsplash/unsplash-js/master.svg?style=flat-square)](https://coveralls.io/github/unsplash/unsplash-js?branch=master)\n\nA [Universal JavaScript](https://medium.com/@mjackson/universal-javascript-4761051b7ae9) wrapper for the [Unsplash API](https://unsplash.com/developers).\n\nBefore using the Unsplash API, you need to [register as a developer](https://unsplash.com/developers) and read the [API Guidelines](https://help.unsplash.com/api-guidelines/unsplash-api-guidelines).\n\n## Browser Support\n\n![Chrome](https://raw.github.com/alrra/browser-logos/master/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.github.com/alrra/browser-logos/master/src/firefox/firefox_48x48.png) | ![Safari](https://raw.github.com/alrra/browser-logos/master/src/safari/safari_48x48.png) | ![Opera](https://raw.github.com/alrra/browser-logos/master/src/opera/opera_48x48.png) | ![Edge](https://raw.github.com/alrra/browser-logos/master/src/edge/edge_48x48.png) | ![IE](https://raw.github.com/alrra/browser-logos/master/src/archive/internet-explorer_9-11/internet-explorer_9-11_48x48.png) |\n--- | --- | --- | --- | --- | --- |\nLatest ✔ | Latest ✔ | Latest ✔ | Latest ✔ | Latest ✔ | 10+ ✔ |\n\n## Quick start\n\nQuick links to methods you're likely to care about:\n\n- [Get a list of new photos](#photos-all) 🎉\n- [Get a random photo](#photo-random) 🎑\n- [Trigger a photo download](#photo-download) 📡\n- [Search for a photo by keyword](#search-photos) 🕵️‍♂️\n\n**Note:** Every application must abide by the [API Guidelines](https://help.unsplash.com/api-guidelines/unsplash-api-guidelines). Specifically, remember to [hotlink images](https://help.unsplash.com/api-guidelines/more-on-each-guideline/guideline-hotlinking-images), [attribute photographers](https://help.unsplash.com/api-guidelines/more-on-each-guideline/guideline-attribution), and [trigger a download when appropriate](https://help.unsplash.com/api-guidelines/more-on-each-guideline/guideline-triggering-a-download).\n\n## Documentation\n- [Installation](https://github.com/unsplash/unsplash-js#installation)\n- [Dependencies](https://github.com/unsplash/unsplash-js#dependencies)\n- [Usage](https://github.com/unsplash/unsplash-js#usage)\n- [Instance Methods](https://github.com/unsplash/unsplash-js#instance-methods)\n- [Helpers](https://github.com/unsplash/unsplash-js#helpers)\n- [Shoutouts](https://github.com/unsplash/unsplash-js#shoutouts)\n- [License](https://github.com/unsplash/unsplash-js#license)\n\n## Installation\n```bash\n$ npm i --save unsplash-js\n```\n\n## Dependencies\nThis library depends on [fetch](https://fetch.spec.whatwg.org/) to make requests to the Unsplash API.  For environments that don't support fetch, you'll need to provide a [poly](https://github.com/github/fetch)[fill](https://github.com/bitinn/node-fetch).\n\n## Usage\n### Creating an instance\nTo create an instance, simply provide an _Object_ with your `access key` and `secret`.\n\n```js\n// ES Modules syntax\nimport Unsplash from 'unsplash-js';\n\n// require syntax\nconst Unsplash = require('unsplash-js').default;\n\nconst unsplash = new Unsplash({\n  applicationId: \"{APP_ACCESS_KEY}\",\n  secret: \"{APP_SECRET}\"\n});\n```\n\nIf you already have a bearer token, you can also provide it to the constructor.\n\n```js\nconst unsplash = new Unsplash({\n  applicationId: \"{APP_ACCESS_KEY}\",\n  secret: \"{APP_SECRET}\",\n  callbackUrl: \"{CALLBACK_URL}\",\n  bearerToken: \"{USER_BEARER_TOKEN}\"\n});\n```\n\nYou can also provide headers that will be set on every request by providing them to the constructor.\n\n```js\nconst unsplash = new Unsplash({\n  applicationId: \"{APP_ACCESS_KEY}\",\n  secret: \"{APP_SECRET}\",\n  headers: {\n    \"X-Custom-Header\": \"foo\"\n  }\n});\n```\n\n_Credentials can be obtained from [Unsplash Developers](https://unsplash.com/developers)._\n\n### React Native\nFor use with React Native, import from `unsplash-js/native` instead.\n\n```js\nimport Unsplash from 'unsplash-js/native';\n```\n\n---\n\n### Authorization workflow\nGenerate an authentication url with the scopes your app requires.\n\n```js\nconst authenticationUrl = unsplash.auth.getAuthenticationUrl([\n  \"public\",\n  \"read_user\",\n  \"write_user\",\n  \"read_photos\",\n  \"write_photos\"\n]);\n```\n\nNow that you have an authentication url, you'll want to redirect the user to it.\n\n```js\nlocation.assign(authenticationUrl);\n```\n\nAfter the user authorizes your app she'll be redirected to your callback url with a `code` querystring present.  Request an access token using that code.\n\n```js\n// The OAuth code will be passed to your callback url as a querystring\n\nunsplash.auth.userAuthentication(query.code)\n  .then(toJson)\n  .then(json => {\n    unsplash.auth.setBearerToken(json.access_token);\n  });\n```\n\n_For more information on the authroization workflow, consult the [Unsplash Documentation](https://unsplash.com/documentation#authorization-workflow)._\n\n---\n\n### Error handling\n```js\nunsplash.users.profile(\"naoufal\")\n  .catch(err => {\n    // Your flawless error handling code\n  });\n```\n\n---\n\n### Sidenote\n\nAll the instance methods below make use of the `toJson` helper method described [below](https://github.com/unsplash/unsplash-js#tojsonres)\n\n---\n\n## Instance Methods\n- [Authorization](https://github.com/unsplash/unsplash-js#authorization)\n- [Current User](https://github.com/unsplash/unsplash-js#current-user)\n- [Users](https://github.com/unsplash/unsplash-js#users)\n- [Photos](https://github.com/unsplash/unsplash-js#photos)\n- [Collections](https://github.com/unsplash/unsplash-js#collections)\n- [Search](https://github.com/unsplash/unsplash-js#search)\n- [Stats](https://github.com/unsplash/unsplash-js#stats)\n\n<div id=\"authorization\" />\n\n### auth.getAuthenticationUrl(scopes)\nBuild an OAuth url with requested scopes.\n\n__Arguments__\n\n| Argument | Type | Opt/Required | Default |\n|---|---|---|---|\n|__`scopes`__|_Array<string>_|Optional| `[\"public\"]` |\n\n__Example__\n```js\nconst authenticationUrl = unsplash.auth.getAuthenticationUrl([\n  \"public\",\n  \"read_user\",\n  \"write_user\",\n  \"read_photos\",\n  \"write_photos\"\n]);\n```\n---\n\n### auth.userAuthentication(code)\nRetrieve a user's access token.\n\n__Arguments__\n\n| Argument | Type | Opt/Required |\n|---|---|---|\n|__`code`__|_string_|Required|\n\n__Example__\n```js\nunsplash.auth.userAuthentication(\"{OAUTH_CODE}\")\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n---\n\n### auth.setBearerToken(accessToken)\nSet a bearer token on the instance.\n\n__Arguments__\n\n| Argument | Type | Opt/Required |\n|---|---|---|\n|__`accessToken`__|_string_|Required|\n\n__Example__\n```js\nunsplash.auth.setBearerToken(\"{BEARER_TOKEN}\");\n```\n---\n\n<div id=\"current-user\" />\n\n### currentUser.profile()\nGet the user’s profile.\n\n__Arguments__\n\n_N/A_\n\n__Example__\n```js\nunsplash.currentUser.profile()\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n---\n\n### currentUser.updateProfile(options)\nUpdate the current user’s profile.\n\n__Arguments__\n\n| Argument | Type | Opt/Required |Notes|\n|---|---|---|---|\n|__`options`__|_Object_|Required|Object with the following optional keys: `username`, `firstName`, `lastName`, `email`, `url`, `location`, `bio`, `instagramUsername`|\n\n__Example__\n```js\nunsplash.currentUser.updateProfile({\n  username: \"drizzy\",\n  firstName: \"Aubrey\",\n  lastName: \"Graham\",\n  email: \"drizzy@octobersveryown.com\",\n  url: \"http://octobersveryown.com\",\n  location: \"Toronto, Ontario, Canada\",\n  bio: \"Views from the 6\",\n  instagramUsername: \"champagnepapi\"\n})\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n---\n\n<div id=\"users\" />\n\n### users.profile(username)\nRetrieve public details on a given user.\n\n__Arguments__\n\n| Argument | Type | Opt/Required |\n|---|---|---|\n|__`username`__|_string_|Required|\n\n__Example__\n```js\nunsplash.users.profile(\"naoufal\")\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n---\n\n### users.statistics(username, resolution, quantity)\nRetrieve statistics for a given user.\n\n__Arguments__\n\n| Argument | Type | Opt/Required | Notes | Default\n|---|---|---|---|---|\n|__`username`__|_string_|Required|\n|__`resolution`__|_string_|Optional|Currently only `days`|`days`|\n|__`quantity`__|_string_|Optional||30|\n\n\n__Example__\n```js\nunsplash.users.statistics(\"naoufal\", \"days\", 30)\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n---\n\n### users.photos(username, page, perPage, orderBy, stats)\nGet a list of photos uploaded by a user.\n\n__Arguments__\n\n| Argument | Type | Opt/Required | Notes | Default |\n|---|---|---|---|---|\n|__`username`__|_string_|Required|||\n|__`page`__|_number_|Optional||1|\n|__`perPage`__|_number_|Optional||10|\n|__`orderBy`__|_string_|Optional|`latest`, `popular` or `oldest`|`latest`|\n|__`stats`__|_boolean_|Optional||`false`|\n\n__Example__\n```js\nunsplash.users.photos(\"naoufal\", 1, 10, \"popular\", false)\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n---\n\n### users.likes(username, page, perPage, orderBy)\nGet a list of photos liked by a user.\n\n__Arguments__\n\n| Argument | Type | Opt/Required | Notes |\n|---|---|---|---|\n|__`username`__|_string_|Required||\n|__`page`__|_number_|Optional||\n|__`perPage`__|_number_|Optional||\n|__`orderBy`__|_string_|Optional|`latest`, `popular` or `oldest`|\n\n__Example__\n```js\nunsplash.users.likes(\"naoufal\", 2, 15, \"popular\")\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n---\n\n### users.collections(username, page, perPage, orderBy)\nGet a list of collections created by the user.\n\n__Arguments__\n\n| Argument | Type | Opt/Required | Notes |\n|---|---|---|---|\n|__`username`__|_string_|Required||\n|__`page`__|_number_|Optional||\n|__`perPage`__|_number_|Optional||\n|__`orderBy`__|_string_|Optional|`published` or `updated`|\n\n__Example__\n```js\nunsplash.users.collections(\"naoufal\", 2, 15, \"updated\")\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n---\n\n<div id=\"photos\" />\n\n<div id=\"photos-all\" />\n\n### photos.listPhotos(page, perPage, orderBy)\nGet a single page from the list of all photos.\n\n__Arguments__\n\n| Argument | Type | Opt/Required |\n|---|---|---|\n|__`page`__|_number_|Optional|\n|__`perPage`__|_number_|Optional|\n|__`orderBy`__|_string_|Optional|`latest`, `popular` or `oldest`|\n\n__Example__\n```js\nunsplash.photos.listPhotos(2, 15, \"latest\")\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n---\n\n### photos.getPhoto(id, width, height, rectangle)\nRetrieve a single photo.\n\n__Arguments__\n\n| Argument | Type | Opt/Required |\n|---|---|---|\n|__`id`__|_string_|Required|\n|__`width`__|_number_|Optional|\n|__`height`__|_number_|Optional|\n|__`rectangle`__|_Array<number>_|Optional|\n\n__Example__\n```js\nunsplash.photos.getPhoto(\"mtNweauBsMQ\", 1920, 1080, [0, 0, 1920, 1080])\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n---\n\n### photos.getPhotoStats(id)\nRetrieve a single photo's stats.\n\n__Arguments__\n\n| Argument | Type | Opt/Required |\n|---|---|---|\n|__`id`__|_string_|Required|\n\n__Example__\n```js\nunsplash.photos.getPhotoStats(\"mtNweauBsMQ\")\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n---\n\n<div id=\"photo-random\" />\n\n### photos.getRandomPhoto({ width, height, query, username, featured })\nRetrieve a single random photo, given optional filters.\n\nWhen using this function, It is recommended to double check the types of the parameters,\nin particular for the parameters of type Array<number>.\n\n__Arguments__\n\nArgument 1:\n_An Object containing the follow keys:_\n\n| Argument | Type | Opt/Required |\n|---|---|---|\n|__`width`__|_number_|Optional|\n|__`height`__|_number_|Optional|\n|__`query`__|_string_|Optional|\n|__`username`__|_string_|Optional|\n|__`featured`__|_boolean_|Optional|\n|__`collections`__|_Array<number>_|Optional|\n|__`count`__|_string_|Optional|\n\n__Example__\n```js\nunsplash.photos.getRandomPhoto({ username: \"naoufal\" })\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n\n```\n\n---\n\n### photos.likePhoto(id)\nLike a photo on behalf of the logged-in user. This requires the `write_likes` scope.\n\n__Arguments__\n\n| Argument | Type | Opt/Required |\n|---|---|---|\n|__`id`__|_string_|Required|\n\n__Example__\n```js\nunsplash.photos.likePhoto(\"mtNweauBsMQ\")\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n---\n\n### photos.unlikePhoto(id)\nRemove a user’s like of a photo.\n\n__Arguments__\n\n| Argument | Type | Opt/Required |\n|---|---|---|\n|__`id`__|_string_|Required|\n\n__Example__\n```js\nunsplash.photos.unlikePhoto(\"mtNweauBsMQ\")\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n---\n\n<div id=\"photo-download\" />\n\n### photos.downloadPhoto(photo)\nTrigger a download of a photo as per the [download tracking requirement of API Guidelines](https://medium.com/unsplash/unsplash-api-guidelines-triggering-a-download-c39b24e99e02).\n\n*Note*: this accepts a photo JSON object, not a URL string or photo ID. See the example below for how to pair it with other calls to trigger it.\n\n__Arguments__\n\n| Argument | Type | Opt/Required |\n|---|---|---|\n|__`photo`__|_json_|Required|\n\n__Example__\n```js\nunsplash.photos.getPhoto(\"mtNweauBsMQ\")\n  .then(toJson)\n  .then(json => {\n    unsplash.photos.downloadPhoto(json);\n  });\n\n// or if working with an array of photos\nunsplash.search.photos(\"dogs\", 1)\n  .then(toJson)\n  .then(json => {\n    unsplash.photos.downloadPhoto(json[\"results\"][0]);\n  });\n```\n\n---\n\n<div id=\"collections\" />\n\n### collections.listCollections(page, perPage, orderBy)\nGet a single page from the list of all collections.\n\n__Arguments__\n\n| Argument | Type | Opt/Required |Notes|\n|---|---|---|---|\n|__`page`__|_number_|Optional||\n|__`perPage`__|_number_|Optional||\n|__`orderBy`__|_string_|Optional|`latest`, `popular` or `oldest`|\n\n__Example__\n```js\nunsplash.collections.listCollections(1, 10, \"popular\")\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n---\n\n### collections.listFeaturedCollections(page, perPage)\nGet a single page from the list of featured collections.\n\n__Arguments__\n\n| Argument | Type | Opt/Required |\n|---|---|---|\n|__`page`__|_number_|Optional|\n|__`perPage`__|_number_|Optional|\n\n__Example__\n```js\nunsplash.collections.listFeaturedCollections(1, 10)\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n---\n\n### collections.getCollection(id)\nRetrieve a single collection. To view a user’s private collections, the `read_collections` scope is required.\n\n__Arguments__\n\n| Argument | Type | Opt/Required |\n|---|---|---|\n|__`id`__|_number_|Required|\n\n\n__Example__\n```js\nunsplash.collections.getCollection(123456)\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n---\n\n### collections.getCollectionPhotos(id, orderBy)\nRetrieve a collection’s photos.\n\n__Arguments__\n\n| Argument | Type | Opt/Required | Notes |\n|---|---|---|---|\n|__`id`__|_number_|Required||\n|__`page`__|_number_|Optional|\n|__`perPage`__|_number_|Optional|\n|__`orderBy`__|_string_|Optional|`latest`, `popular` or `oldest`|\n\n\n\n__Example__\n```js\nunsplash.collections.getCollectionPhotos(123456, 1, 10, \"popular\")\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n---\n\n### collections.createCollection(title, description, private)\nCreate a new collection. This requires the `write_collections` scope.\n\n__Arguments__\n\n| Argument | Type | Opt/Required |\n|---|---|---|\n|__`title`__|_string_|Required|\n|__`description`__|_string_|Optional|\n|__`private`__|_boolean_|Optional|\n\n__Example__\n```js\nunsplash.collections.createCollection(\"Birds\", \"Wild birds from 'round the world\", true)\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n---\n\n### collections.updateCollection(id, title, description, private)\nUpdate an existing collection belonging to the logged-in user. This requires the `write_collections` scope.\n\n__Arguments__\n\n| Argument | Type | Opt/Required |\n|---|---|---|\n|__`id`__|_number_|Required|\n|__`title`__|_string_|Optional|\n|__`description`__|_string_|Optional|\n|__`private`__|_boolean_|Optional|\n\n__Example__\n```js\nunsplash.collections.updateCollection(12345, \"Wild Birds\", \"Wild birds from around the world\", false)\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n---\n\n### collections.deleteCollection(id)\nDelete a collection belonging to the logged-in user. This requires the `write_collections` scope.\n\n__Arguments__\n\n| Argument | Type | Opt/Required |\n|---|---|---|\n|__`id`__|_number_|Required|\n\n\n__Example__\n```js\nunsplash.collections.deleteCollection(88)\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n---\n\n### collections.addPhotoToCollection(collectionId, photoId)\nAdd a photo to one of the logged-in user’s collections. Requires the `write_collections` scope.\n\n__Arguments__\n\n| Argument | Type | Opt/Required |\n|---|---|---|\n|__`collectionId`__|_number_|Required|\n|__`photoId`__|_string_|Required|\n\n__Example__\n```js\nunsplash.collections.addPhotoToCollection(88, 'abc1234')\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n---\n\n### collections.removePhotoFromCollection(collectionId, photoId)\nRemove a photo from one of the logged-in user’s collections. Requires the `write_collections` scope.\n\n__Arguments__\n\n| Argument | Type | Opt/Required |\n|---|---|---|\n|__`collectionId`__|_number_|Required|\n|__`photoId`__|_string_|Required|\n\n__Example__\n```js\nunsplash.collections.removePhotoFromCollection(88, 'abc1234')\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n---\n\n### collections.listRelatedCollections(collectionId)\nLists collections related to the provided one.\n\n__Arguments__\n\n| Argument | Type | Opt/Required |\n|---|---|---|\n|__`collectionId`__|_number_|Required|\n\n__Example__\n```js\nunsplash.collections.listRelatedCollections(88)\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n---\n\n<div id=\"search\" />\n\n<div id=\"search-photos\" />\n\n### search.photos(keyword, page, per_page)\nGet a list of photos matching the keyword.\n\n__Arguments__\n\n| Argument | Type | Opt/Required | Default |\n|---|---|---|---|\n|__`keyword`__|_string_|Required||\n|__`page`__|_number_|Optional||\n|__`per_page`__|_number_|Optional|10|\n\n\n__Example__\n```js\nunsplash.search.photos(\"dogs\", 1)\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n\n### search.users(keyword, page, per_page)\nGet a list of users matching the keyword.\n\n__Arguments__\n\n| Argument | Type | Opt/Required | Default |\n|---|---|---|---|\n|__`keyword`__|_string_|Required||\n|__`page`__|_number_|Optional||\n|__`per_page`__|_number_|Optional|10|\n\n\n__Example__\n```js\nunsplash.search.users(\"steve\", 1)\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n\n### search.collections(keyword, page, per_page)\nGet a list of collections matching the keyword.\n\n__Arguments__\n\n| Argument | Type | Opt/Required | Default |\n|---|---|---|---|\n|__`keyword`__|_string_|Required||\n|__`page`__|_number_|Optional||\n|__`per_page`__|_number_|Optional|10|\n\n\n__Example__\n```js\nunsplash.search.collections(\"dogs\", 1)\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n\n---\n\n<div id=\"stats\" />\n\n### stats.total()\nGet a list of download counts for all of Unsplash.\n\n__Arguments__\n\n_N/A_\n\n__Example__\n```js\nunsplash.stats.total()\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n---\n\n## Helpers\n\n### toJson(res)\n__Arguments__\n\n| Argument | Type | Opt/Required |\n|---|---|---|\n|__`res`__|_Object_|Required|\n\n__Example__\n```js\nimport Unsplash, { toJson } from \"unsplash-js\";\n\nconst unsplash = new Unsplash({\n  applicationId: \"{YOUR_ACCESS_KEY}\",\n  secret: \"{YOUR_SECRET_KEY}\"\n});\n\nunsplash.stats.total()\n  .then(toJson)\n  .then(json => {\n    // Your code\n  });\n```\n---\n\n## Shoutouts\n- Shoutout to all the [contributors](https://github.com/unsplash/unsplash-js/graphs/contributors) for lending a helping hand.\n- Shoutout to [BrowserStack](https://www.browserstack.com/) for letting us use their service to run automated browser tests.\n\n## License\nCopyright (c) 2019, [Unsplash](https://unsplash.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/unsplash/unsplash-js.git"
  },
  "scripts": {
    "build": "npm run build:lib && npm run build:umd && npm run build:umd:min && npm run build:examples",
    "build:examples": "cp dist/unsplash.min.js examples/umd/public/unsplash.min.js",
    "build:lib": "babel src --out-dir lib",
    "build:umd": "webpack src/unsplash.js dist/unsplash.js --config webpack.config.development.js",
    "build:umd:min": "webpack src/unsplash.js dist/unsplash.min.js --config webpack.config.production.js",
    "build:watch": "babel src --watch --out-dir lib",
    "flow": "flow status",
    "lint": "eslint src",
    "prepublish": "npm run build",
    "publish:major": "npm run build && npm version major",
    "publish:minor": "npm run build && npm version minor",
    "publish:patch": "npm run build && npm version patch",
    "test": "npm run lint && npm run flow && npm run test:node && npm run test:browser",
    "test:browser": "karma start",
    "test:ci": "npm run lint && npm run flow && npm run test:browser && npm run test:coverage",
    "test:coverage": "babel-node ./node_modules/.bin/isparta cover _mocha -- --require test/setup",
    "test:node": "mocha --compilers js:babel-core/register --require test/setup --recursive",
    "test:watch": "npm test -- --watch"
  },
  "version": "5.0.0"
}
